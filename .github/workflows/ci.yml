name: ci

on:
  push:
  schedule: [cron: "40 1 * * *"]

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  CARGO_UNSTABLE_SPARSE_REGISTRY: true

jobs:
  assign:
    name: assign build_id
    runs-on: ubuntu-latest

    steps:
      - run: wget https://github.com/trevyn/animal-time/releases/latest/download/animal-time
      - run: chmod +x animal-time
      - run: ./animal-time > build_id
      - run: cat build_id

      - uses: actions/upload-artifact@v3
        with:
          name: build_id
          path: build_id

  build:
    needs: [assign]
    name: build rust ${{ matrix.rust }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        rust: [beta, nightly] # we're using let-else in 1.65

    steps:
      - uses: actions/checkout@v3

      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: ${{ matrix.rust }}

      - run: cargo fetch

      - run: RUSTFLAGS="-Ctarget-cpu=sandybridge" cargo build --release --target x86_64-unknown-linux-gnu

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.rust == 'nightly' }}
        with:
          name: ${{ matrix.os }}-${{ matrix.rust }}
          path: |
            target/x86_64-unknown-linux-gnu/release/*
            !target/x86_64-unknown-linux-gnu/release/.fingerprint/*
            !target/x86_64-unknown-linux-gnu/release/build/*
            !target/x86_64-unknown-linux-gnu/release/deps/*
            !target/x86_64-unknown-linux-gnu/release/examples/*
            !target/x86_64-unknown-linux-gnu/release/incremental/*
            !target/x86_64-unknown-linux-gnu/release/*.d
            !target/x86_64-unknown-linux-gnu/release/*.rlib
            !target/x86_64-unknown-linux-gnu/release/*.dylib
            !target/x86_64-unknown-linux-gnu/release/*.so

  release:
    permissions:
      contents: write
    needs: [assign, build]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/download-artifact@v3

      - run: cat build_id/build_id

      - run: echo "BUILD_ID=$(cat build_id/build_id)" >> $GITHUB_ENV

      - run: |
          mv ubuntu-latest-nightly/Cargo.lock Cargo.lock
          mv ubuntu-latest-nightly/package-lock.json package-lock.json
          mv ubuntu-latest-nightly/target/x86_64-unknown-linux-gnu/release/$(basename ubuntu-latest-nightly/target/x86_64-unknown-linux-gnu/release/*) $(basename ubuntu-latest-nightly/target/x86_64-unknown-linux-gnu/release/*)

      - id: create_release
        uses: trevyn/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD_ID }}
          target_commitish: ${{ github.sha }}
          draft: false
          prerelease: false
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            dht-experiments
